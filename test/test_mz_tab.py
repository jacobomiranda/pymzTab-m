# coding: utf-8

"""
    mzTab-M reference implementation and validation API.

    This is the mzTab-M reference implementation and validation API service.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: nils.hoffmann@isas.de
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.mz_tab import MzTab  # noqa: E501
from openapi_client.rest import ApiException

class TestMzTab(unittest.TestCase):
    """MzTab unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test MzTab
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.mz_tab.MzTab()  # noqa: E501
        if include_optional :
            return MzTab(
                metadata = openapi_client.models.metadata.Metadata(
                    prefix = 'MTD', 
                    mz_tab_version = 'a', 
                    mz_tab_id = 'MTD mzTab-ID MTBLS214', 
                    title = 'MTD title My first test experiment', 
                    description = 'MTD description An experiment investigating the effects of Il-6.', 
                    contact = [
                        openapi_client.models.contact.Contact(
                            id = 1, 
                            name = '0', 
                            affiliation = '0', 
                            email = 'a', )
                        ], 
                    publication = [
                        openapi_client.models.publication.Publication(
                            id = 1, 
                            publication_items = [
                                openapi_client.models.publication_item.PublicationItem(
                                    type = 'doi', 
                                    accession = '0', )
                                ], )
                        ], 
                    uri = [
                        openapi_client.models.uri.Uri(
                            id = 1, 
                            value = '0', )
                        ], 
                    external_study_uri = [
                        openapi_client.models.uri.Uri(
                            id = 1, 
                            value = '0', )
                        ], 
                    instrument = [
                        openapi_client.models.instrument.Instrument(
                            id = 1, 
                            name = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), 
                            source = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), 
                            analyzer = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            detector = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), )
                        ], 
                    quantification_method = openapi_client.models.parameter.Parameter(
                        id = 1, 
                        cv_label = '0', 
                        cv_accession = '0', 
                        name = '0', 
                        value = '0', ), 
                    sample = [
                        openapi_client.models.sample.Sample(
                            id = 1, 
                            custom = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            species = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            tissue = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            cell_type = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            disease = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            description = '0', )
                        ], 
                    sample_processing = [
                        openapi_client.models.sample_processing.SampleProcessing(
                            id = 1, 
                            sample_processing = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], )
                        ], 
                    software = [
                        openapi_client.models.software.Software(
                            id = 1, 
                            parameter = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), 
                            setting = [
                                '0'
                                ], )
                        ], 
                    derivatization_agent = [
                        openapi_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', )
                        ], 
                    ms_run = [
                        openapi_client.models.ms_run.MsRun(
                            id = 1, 
                            name = '0', 
                            location = '0', 
                            instrument_ref = openapi_client.models.instrument.Instrument(
                                id = 1, ), 
                            format = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), 
                            id_format = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), 
                            fragmentation_method = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            scan_polarity = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            hash = '0', 
                            hash_method = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), )
                        ], 
                    assay = [
                        openapi_client.models.assay.Assay(
                            id = 1, 
                            name = '0', 
                            external_uri = '0', 
                            sample_ref = openapi_client.models.sample.Sample(
                                id = 1, 
                                description = '0', ), 
                            ms_run_ref = [
                                openapi_client.models.ms_run.MsRun(
                                    id = 1, 
                                    name = '0', 
                                    location = '0', 
                                    hash = '0', )
                                ], )
                        ], 
                    study_variable = [
                        openapi_client.models.study_variable.StudyVariable(
                            id = 1, 
                            name = '0', 
                            assay_refs = [
                                openapi_client.models.assay.Assay(
                                    id = 1, 
                                    name = '0', 
                                    external_uri = '0', 
                                    ms_run_ref = [
                                        openapi_client.models.ms_run.MsRun(
                                            id = 1, 
                                            name = '0', 
                                            location = '0', 
                                            hash = '0', )
                                        ], )
                                ], 
                            average_function = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), 
                            variation_function = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), 
                            description = '0', 
                            factors = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], )
                        ], 
                    custom = [
                        openapi_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', )
                        ], 
                    cv = [
                        openapi_client.models.cv.CV(
                            id = 1, 
                            label = '0', 
                            full_name = '0', 
                            version = '0', 
                            uri = '0', )
                        ], 
                    small_molecule_quantification_unit = openapi_client.models.parameter.Parameter(
                        id = 1, 
                        cv_label = '0', 
                        cv_accession = '0', 
                        name = '0', 
                        value = '0', ), 
                    small_molecule_feature_quantification_unit = openapi_client.models.parameter.Parameter(
                        id = 1, 
                        cv_label = '0', 
                        cv_accession = '0', 
                        name = '0', 
                        value = '0', ), 
                    small_molecule_identification_reliability = openapi_client.models.parameter.Parameter(
                        id = 1, 
                        cv_label = '0', 
                        cv_accession = '0', 
                        name = '0', 
                        value = '0', ), 
                    database = [
                        openapi_client.models.database.Database(
                            id = 1, 
                            param = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), 
                            prefix = '0', 
                            version = '0', 
                            uri = '0', )
                        ], 
                    id_confidence_measure = [
                        openapi_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', )
                        ], 
                    colunit_small_molecule = [
                        openapi_client.models.column_parameter_mapping.ColumnParameterMapping(
                            column_name = '0', 
                            param = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), )
                        ], 
                    colunit_small_molecule_feature = [
                        openapi_client.models.column_parameter_mapping.ColumnParameterMapping(
                            column_name = '0', 
                            param = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), )
                        ], 
                    colunit_small_molecule_evidence = [
                        openapi_client.models.column_parameter_mapping.ColumnParameterMapping(
                            column_name = '0', 
                            param = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), )
                        ], ), 
                small_molecule_summary = [
                    openapi_client.models.small_molecule_summary.SmallMoleculeSummary(
                        prefix = 'SML', 
                        header_prefix = 'SMH', 
                        sml_id = 56, 
                        smf_id_refs = [
                            56
                            ], 
                        database_identifier = [
                            '0'
                            ], 
                        chemical_formula = [
                            '0'
                            ], 
                        smiles = [
                            '0'
                            ], 
                        inchi = [
                            '0'
                            ], 
                        chemical_name = [
                            '0'
                            ], 
                        uri = [
                            '0'
                            ], 
                        theoretical_neutral_mass = [
                            1.337
                            ], 
                        adduct_ions = [
                            '0'
                            ], 
                        reliability = '0', 
                        best_id_confidence_measure = openapi_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', ), 
                        best_id_confidence_value = 1.337, 
                        abundance_assay = [
                            1.337
                            ], 
                        abundance_study_variable = [
                            1.337
                            ], 
                        abundance_variation_study_variable = [
                            1.337
                            ], 
                        opt = [
                            openapi_client.models.opt_column_mapping.OptColumnMapping(
                                identifier = '0', 
                                param = openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', ), 
                                value = '0', )
                            ], 
                        comment = [
                            openapi_client.models.comment.Comment(
                                prefix = 'COM', 
                                msg = '0', 
                                line_number = 56, )
                            ], )
                    ], 
                small_molecule_feature = [
                    openapi_client.models.small_molecule_feature.SmallMoleculeFeature(
                        prefix = 'SMF', 
                        header_prefix = 'SFH', 
                        smf_id = 56, 
                        sme_id_refs = [
                            56
                            ], 
                        sme_id_ref_ambiguity_code = 56, 
                        adduct_ion = 'a', 
                        isotopomer = openapi_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', ), 
                        exp_mass_to_charge = 1.337, 
                        charge = 56, 
                        retention_time_in_seconds = 1.337, 
                        retention_time_in_seconds_start = 1.337, 
                        retention_time_in_seconds_end = 1.337, 
                        abundance_assay = [
                            1.337
                            ], 
                        opt = [
                            openapi_client.models.opt_column_mapping.OptColumnMapping(
                                identifier = '0', 
                                param = openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', ), 
                                value = '0', )
                            ], 
                        comment = [
                            openapi_client.models.comment.Comment(
                                prefix = 'COM', 
                                msg = '0', 
                                line_number = 56, )
                            ], )
                    ], 
                small_molecule_evidence = [
                    openapi_client.models.small_molecule_evidence.SmallMoleculeEvidence(
                        prefix = 'SME', 
                        header_prefix = 'SEH', 
                        sme_id = 56, 
                        evidence_input_id = '0', 
                        database_identifier = '0', 
                        chemical_formula = '0', 
                        smiles = '0', 
                        inchi = '0', 
                        chemical_name = '0', 
                        uri = '0', 
                        derivatized_form = openapi_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', ), 
                        adduct_ion = 'a', 
                        exp_mass_to_charge = 1.337, 
                        charge = 56, 
                        theoretical_mass_to_charge = 1.337, 
                        spectra_ref = [
                            openapi_client.models.spectra_ref.SpectraRef(
                                ms_run = openapi_client.models.ms_run.MsRun(
                                    id = 1, 
                                    name = '0', 
                                    location = '0', 
                                    instrument_ref = openapi_client.models.instrument.Instrument(
                                        id = 1, 
                                        name = openapi_client.models.parameter.Parameter(
                                            id = 1, 
                                            cv_label = '0', 
                                            cv_accession = '0', 
                                            name = '0', 
                                            value = '0', ), 
                                        source = openapi_client.models.parameter.Parameter(
                                            id = 1, 
                                            cv_label = '0', 
                                            cv_accession = '0', 
                                            name = '0', 
                                            value = '0', ), 
                                        analyzer = [
                                            openapi_client.models.parameter.Parameter(
                                                id = 1, 
                                                cv_label = '0', 
                                                cv_accession = '0', 
                                                name = '0', 
                                                value = '0', )
                                            ], 
                                        detector = openapi_client.models.parameter.Parameter(
                                            id = 1, 
                                            cv_label = '0', 
                                            cv_accession = '0', 
                                            name = '0', 
                                            value = '0', ), ), 
                                    format = openapi_client.models.parameter.Parameter(
                                        id = 1, 
                                        cv_label = '0', 
                                        cv_accession = '0', 
                                        name = '0', 
                                        value = '0', ), 
                                    id_format = openapi_client.models.parameter.Parameter(
                                        id = 1, 
                                        cv_label = '0', 
                                        cv_accession = '0', 
                                        name = '0', 
                                        value = '0', ), 
                                    fragmentation_method = [
                                        openapi_client.models.parameter.Parameter(
                                            id = 1, 
                                            cv_label = '0', 
                                            cv_accession = '0', 
                                            name = '0', 
                                            value = '0', )
                                        ], 
                                    scan_polarity = [
                                        openapi_client.models.parameter.Parameter(
                                            id = 1, 
                                            cv_label = '0', 
                                            cv_accession = '0', 
                                            name = '0', 
                                            value = '0', )
                                        ], 
                                    hash = '0', 
                                    hash_method = openapi_client.models.parameter.Parameter(
                                        id = 1, 
                                        cv_label = '0', 
                                        cv_accession = '0', 
                                        name = '0', 
                                        value = '0', ), ), 
                                reference = '0', )
                            ], 
                        identification_method = openapi_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', ), 
                        ms_level = openapi_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', ), 
                        id_confidence_measure = [
                            1.337
                            ], 
                        rank = 1, 
                        opt = [
                            openapi_client.models.opt_column_mapping.OptColumnMapping(
                                identifier = '0', 
                                param = openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', ), 
                                value = '0', )
                            ], 
                        comment = [
                            openapi_client.models.comment.Comment(
                                prefix = 'COM', 
                                msg = '0', 
                                line_number = 56, )
                            ], )
                    ], 
                comment = [
                    openapi_client.models.comment.Comment(
                        prefix = 'COM', 
                        msg = '0', 
                        line_number = 56, )
                    ]
            )
        else :
            return MzTab(
                metadata = openapi_client.models.metadata.Metadata(
                    prefix = 'MTD', 
                    mz_tab_version = 'a', 
                    mz_tab_id = 'MTD mzTab-ID MTBLS214', 
                    title = 'MTD title My first test experiment', 
                    description = 'MTD description An experiment investigating the effects of Il-6.', 
                    contact = [
                        openapi_client.models.contact.Contact(
                            id = 1, 
                            name = '0', 
                            affiliation = '0', 
                            email = 'a', )
                        ], 
                    publication = [
                        openapi_client.models.publication.Publication(
                            id = 1, 
                            publication_items = [
                                openapi_client.models.publication_item.PublicationItem(
                                    type = 'doi', 
                                    accession = '0', )
                                ], )
                        ], 
                    uri = [
                        openapi_client.models.uri.Uri(
                            id = 1, 
                            value = '0', )
                        ], 
                    external_study_uri = [
                        openapi_client.models.uri.Uri(
                            id = 1, 
                            value = '0', )
                        ], 
                    instrument = [
                        openapi_client.models.instrument.Instrument(
                            id = 1, 
                            name = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), 
                            source = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), 
                            analyzer = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            detector = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), )
                        ], 
                    quantification_method = openapi_client.models.parameter.Parameter(
                        id = 1, 
                        cv_label = '0', 
                        cv_accession = '0', 
                        name = '0', 
                        value = '0', ), 
                    sample = [
                        openapi_client.models.sample.Sample(
                            id = 1, 
                            custom = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            species = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            tissue = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            cell_type = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            disease = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            description = '0', )
                        ], 
                    sample_processing = [
                        openapi_client.models.sample_processing.SampleProcessing(
                            id = 1, 
                            sample_processing = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], )
                        ], 
                    software = [
                        openapi_client.models.software.Software(
                            id = 1, 
                            parameter = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), 
                            setting = [
                                '0'
                                ], )
                        ], 
                    derivatization_agent = [
                        openapi_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', )
                        ], 
                    ms_run = [
                        openapi_client.models.ms_run.MsRun(
                            id = 1, 
                            name = '0', 
                            location = '0', 
                            instrument_ref = openapi_client.models.instrument.Instrument(
                                id = 1, ), 
                            format = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), 
                            id_format = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), 
                            fragmentation_method = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            scan_polarity = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            hash = '0', 
                            hash_method = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), )
                        ], 
                    assay = [
                        openapi_client.models.assay.Assay(
                            id = 1, 
                            name = '0', 
                            external_uri = '0', 
                            sample_ref = openapi_client.models.sample.Sample(
                                id = 1, 
                                description = '0', ), 
                            ms_run_ref = [
                                openapi_client.models.ms_run.MsRun(
                                    id = 1, 
                                    name = '0', 
                                    location = '0', 
                                    hash = '0', )
                                ], )
                        ], 
                    study_variable = [
                        openapi_client.models.study_variable.StudyVariable(
                            id = 1, 
                            name = '0', 
                            assay_refs = [
                                openapi_client.models.assay.Assay(
                                    id = 1, 
                                    name = '0', 
                                    external_uri = '0', 
                                    ms_run_ref = [
                                        openapi_client.models.ms_run.MsRun(
                                            id = 1, 
                                            name = '0', 
                                            location = '0', 
                                            hash = '0', )
                                        ], )
                                ], 
                            average_function = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), 
                            variation_function = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), 
                            description = '0', 
                            factors = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], )
                        ], 
                    custom = [
                        openapi_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', )
                        ], 
                    cv = [
                        openapi_client.models.cv.CV(
                            id = 1, 
                            label = '0', 
                            full_name = '0', 
                            version = '0', 
                            uri = '0', )
                        ], 
                    small_molecule_quantification_unit = openapi_client.models.parameter.Parameter(
                        id = 1, 
                        cv_label = '0', 
                        cv_accession = '0', 
                        name = '0', 
                        value = '0', ), 
                    small_molecule_feature_quantification_unit = openapi_client.models.parameter.Parameter(
                        id = 1, 
                        cv_label = '0', 
                        cv_accession = '0', 
                        name = '0', 
                        value = '0', ), 
                    small_molecule_identification_reliability = openapi_client.models.parameter.Parameter(
                        id = 1, 
                        cv_label = '0', 
                        cv_accession = '0', 
                        name = '0', 
                        value = '0', ), 
                    database = [
                        openapi_client.models.database.Database(
                            id = 1, 
                            param = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), 
                            prefix = '0', 
                            version = '0', 
                            uri = '0', )
                        ], 
                    id_confidence_measure = [
                        openapi_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', )
                        ], 
                    colunit_small_molecule = [
                        openapi_client.models.column_parameter_mapping.ColumnParameterMapping(
                            column_name = '0', 
                            param = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), )
                        ], 
                    colunit_small_molecule_feature = [
                        openapi_client.models.column_parameter_mapping.ColumnParameterMapping(
                            column_name = '0', 
                            param = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), )
                        ], 
                    colunit_small_molecule_evidence = [
                        openapi_client.models.column_parameter_mapping.ColumnParameterMapping(
                            column_name = '0', 
                            param = openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', ), )
                        ], ),
                small_molecule_summary = [
                    openapi_client.models.small_molecule_summary.SmallMoleculeSummary(
                        prefix = 'SML', 
                        header_prefix = 'SMH', 
                        sml_id = 56, 
                        smf_id_refs = [
                            56
                            ], 
                        database_identifier = [
                            '0'
                            ], 
                        chemical_formula = [
                            '0'
                            ], 
                        smiles = [
                            '0'
                            ], 
                        inchi = [
                            '0'
                            ], 
                        chemical_name = [
                            '0'
                            ], 
                        uri = [
                            '0'
                            ], 
                        theoretical_neutral_mass = [
                            1.337
                            ], 
                        adduct_ions = [
                            '0'
                            ], 
                        reliability = '0', 
                        best_id_confidence_measure = openapi_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', ), 
                        best_id_confidence_value = 1.337, 
                        abundance_assay = [
                            1.337
                            ], 
                        abundance_study_variable = [
                            1.337
                            ], 
                        abundance_variation_study_variable = [
                            1.337
                            ], 
                        opt = [
                            openapi_client.models.opt_column_mapping.OptColumnMapping(
                                identifier = '0', 
                                param = openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', ), 
                                value = '0', )
                            ], 
                        comment = [
                            openapi_client.models.comment.Comment(
                                prefix = 'COM', 
                                msg = '0', 
                                line_number = 56, )
                            ], )
                    ],
                small_molecule_feature = [
                    openapi_client.models.small_molecule_feature.SmallMoleculeFeature(
                        prefix = 'SMF', 
                        header_prefix = 'SFH', 
                        smf_id = 56, 
                        sme_id_refs = [
                            56
                            ], 
                        sme_id_ref_ambiguity_code = 56, 
                        adduct_ion = 'a', 
                        isotopomer = openapi_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', ), 
                        exp_mass_to_charge = 1.337, 
                        charge = 56, 
                        retention_time_in_seconds = 1.337, 
                        retention_time_in_seconds_start = 1.337, 
                        retention_time_in_seconds_end = 1.337, 
                        abundance_assay = [
                            1.337
                            ], 
                        opt = [
                            openapi_client.models.opt_column_mapping.OptColumnMapping(
                                identifier = '0', 
                                param = openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', ), 
                                value = '0', )
                            ], 
                        comment = [
                            openapi_client.models.comment.Comment(
                                prefix = 'COM', 
                                msg = '0', 
                                line_number = 56, )
                            ], )
                    ],
                small_molecule_evidence = [
                    openapi_client.models.small_molecule_evidence.SmallMoleculeEvidence(
                        prefix = 'SME', 
                        header_prefix = 'SEH', 
                        sme_id = 56, 
                        evidence_input_id = '0', 
                        database_identifier = '0', 
                        chemical_formula = '0', 
                        smiles = '0', 
                        inchi = '0', 
                        chemical_name = '0', 
                        uri = '0', 
                        derivatized_form = openapi_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', ), 
                        adduct_ion = 'a', 
                        exp_mass_to_charge = 1.337, 
                        charge = 56, 
                        theoretical_mass_to_charge = 1.337, 
                        spectra_ref = [
                            openapi_client.models.spectra_ref.SpectraRef(
                                ms_run = openapi_client.models.ms_run.MsRun(
                                    id = 1, 
                                    name = '0', 
                                    location = '0', 
                                    instrument_ref = openapi_client.models.instrument.Instrument(
                                        id = 1, 
                                        name = openapi_client.models.parameter.Parameter(
                                            id = 1, 
                                            cv_label = '0', 
                                            cv_accession = '0', 
                                            name = '0', 
                                            value = '0', ), 
                                        source = openapi_client.models.parameter.Parameter(
                                            id = 1, 
                                            cv_label = '0', 
                                            cv_accession = '0', 
                                            name = '0', 
                                            value = '0', ), 
                                        analyzer = [
                                            openapi_client.models.parameter.Parameter(
                                                id = 1, 
                                                cv_label = '0', 
                                                cv_accession = '0', 
                                                name = '0', 
                                                value = '0', )
                                            ], 
                                        detector = openapi_client.models.parameter.Parameter(
                                            id = 1, 
                                            cv_label = '0', 
                                            cv_accession = '0', 
                                            name = '0', 
                                            value = '0', ), ), 
                                    format = openapi_client.models.parameter.Parameter(
                                        id = 1, 
                                        cv_label = '0', 
                                        cv_accession = '0', 
                                        name = '0', 
                                        value = '0', ), 
                                    id_format = openapi_client.models.parameter.Parameter(
                                        id = 1, 
                                        cv_label = '0', 
                                        cv_accession = '0', 
                                        name = '0', 
                                        value = '0', ), 
                                    fragmentation_method = [
                                        openapi_client.models.parameter.Parameter(
                                            id = 1, 
                                            cv_label = '0', 
                                            cv_accession = '0', 
                                            name = '0', 
                                            value = '0', )
                                        ], 
                                    scan_polarity = [
                                        openapi_client.models.parameter.Parameter(
                                            id = 1, 
                                            cv_label = '0', 
                                            cv_accession = '0', 
                                            name = '0', 
                                            value = '0', )
                                        ], 
                                    hash = '0', 
                                    hash_method = openapi_client.models.parameter.Parameter(
                                        id = 1, 
                                        cv_label = '0', 
                                        cv_accession = '0', 
                                        name = '0', 
                                        value = '0', ), ), 
                                reference = '0', )
                            ], 
                        identification_method = openapi_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', ), 
                        ms_level = openapi_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', ), 
                        id_confidence_measure = [
                            1.337
                            ], 
                        rank = 1, 
                        opt = [
                            openapi_client.models.opt_column_mapping.OptColumnMapping(
                                identifier = '0', 
                                param = openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', ), 
                                value = '0', )
                            ], 
                        comment = [
                            openapi_client.models.comment.Comment(
                                prefix = 'COM', 
                                msg = '0', 
                                line_number = 56, )
                            ], )
                    ],
        )

    def testMzTab(self):
        """Test MzTab"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
