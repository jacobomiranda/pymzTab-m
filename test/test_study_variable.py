# coding: utf-8

"""
    mzTab-M reference implementation and validation API.

    This is the mzTab-M reference implementation and validation API service.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: nils.hoffmann@isas.de
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.study_variable import StudyVariable  # noqa: E501
from openapi_client.rest import ApiException

class TestStudyVariable(unittest.TestCase):
    """StudyVariable unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test StudyVariable
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.study_variable.StudyVariable()  # noqa: E501
        if include_optional :
            return StudyVariable(
                id = 1, 
                name = '0', 
                assay_refs = [
                    openapi_client.models.assay.Assay(
                        id = 1, 
                        name = '0', 
                        custom = [
                            openapi_client.models.parameter.Parameter(
                                id = 1, 
                                cv_label = '0', 
                                cv_accession = '0', 
                                name = '0', 
                                value = '0', )
                            ], 
                        external_uri = '0', 
                        sample_ref = openapi_client.models.sample.Sample(
                            id = 1, 
                            name = '0', 
                            species = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            tissue = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            cell_type = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            disease = [
                                openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', )
                                ], 
                            description = '0', ), 
                        ms_run_ref = [
                            openapi_client.models.ms_run.MsRun(
                                id = 1, 
                                name = '0', 
                                location = '0', 
                                instrument_ref = openapi_client.models.instrument.Instrument(
                                    id = 1, 
                                    name = openapi_client.models.parameter.Parameter(
                                        id = 1, 
                                        cv_label = '0', 
                                        cv_accession = '0', 
                                        name = '0', 
                                        value = '0', ), 
                                    source = openapi_client.models.parameter.Parameter(
                                        id = 1, 
                                        cv_label = '0', 
                                        cv_accession = '0', 
                                        name = '0', 
                                        value = '0', ), 
                                    analyzer = [
                                        openapi_client.models.parameter.Parameter(
                                            id = 1, 
                                            cv_label = '0', 
                                            cv_accession = '0', 
                                            name = '0', 
                                            value = '0', )
                                        ], 
                                    detector = openapi_client.models.parameter.Parameter(
                                        id = 1, 
                                        cv_label = '0', 
                                        cv_accession = '0', 
                                        name = '0', 
                                        value = '0', ), ), 
                                format = openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', ), 
                                id_format = openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', ), 
                                fragmentation_method = [
                                    openapi_client.models.parameter.Parameter(
                                        id = 1, 
                                        cv_label = '0', 
                                        cv_accession = '0', 
                                        name = '0', 
                                        value = '0', )
                                    ], 
                                scan_polarity = [
                                    openapi_client.models.parameter.Parameter(
                                        id = 1, 
                                        cv_label = '0', 
                                        cv_accession = '0', 
                                        name = '0', 
                                        value = '0', )
                                    ], 
                                hash = '0', 
                                hash_method = openapi_client.models.parameter.Parameter(
                                    id = 1, 
                                    cv_label = '0', 
                                    cv_accession = '0', 
                                    name = '0', 
                                    value = '0', ), )
                            ], )
                    ], 
                average_function = openapi_client.models.parameter.Parameter(
                    id = 1, 
                    cv_label = '0', 
                    cv_accession = '0', 
                    name = '0', 
                    value = '0', ), 
                variation_function = openapi_client.models.parameter.Parameter(
                    id = 1, 
                    cv_label = '0', 
                    cv_accession = '0', 
                    name = '0', 
                    value = '0', ), 
                description = '0', 
                factors = [
                    openapi_client.models.parameter.Parameter(
                        id = 1, 
                        cv_label = '0', 
                        cv_accession = '0', 
                        name = '0', 
                        value = '0', )
                    ]
            )
        else :
            return StudyVariable(
                id = 1,
                name = '0',
        )

    def testStudyVariable(self):
        """Test StudyVariable"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
